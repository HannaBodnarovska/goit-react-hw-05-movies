{"version":3,"file":"static/js/76.3b931b30.chunk.js","mappings":"gNACA,EAAgC,4BAAhC,EAAuE,uBAAvE,EAAyG,uBAAzG,EAA6I,yBAA7I,EAAkQ,sB,SCgDlQ,MA7CA,SAAaA,GAAe,IAAZC,EAAOD,EAAPC,QACdC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAe1B,OAbAG,EAAAA,EAAAA,YAAU,WAERC,EAAAA,EAAAA,IAAU,6BAADC,OAA8Bb,EAAO,aAAAa,OAD9B,qCAEbC,MAAK,SAAAC,GACJT,EAAQS,EAASC,KAAKX,MACtBK,GAAW,EACb,IACCO,OAAM,SAAAC,GACLC,QAAQD,MAAM,mPAAiDA,GAC/DR,GAAW,EACb,GACJ,GAAG,CAACV,IAEAS,GACKW,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,SAAC,yLAIvCC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAqBC,SAAA,EACnCH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,gGACHlB,EAAKoB,OAAS,GACbL,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAgBC,SAC5BlB,EAAKqB,KAAI,SAAAC,GAAK,OACbH,EAAAA,EAAAA,MAAA,MAAmBH,UAAWC,EAAgBC,SAAA,EAC5CH,EAAAA,EAAAA,KAAA,OACEQ,IAAG,kCAAAf,OAAoCc,EAAME,cAC7CC,IAAKH,EAAMI,KACXV,UAAWC,KAEbF,EAAAA,EAAAA,KAAA,MAAAG,SAAKI,EAAMI,QACXP,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,6BAAOI,EAAMK,eAPTL,EAAMM,GAQV,OAITb,EAAAA,EAAAA,KAAA,KAAAG,SAAG,0JAIX,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__NIXqj\",\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"actorImage\":\"Cast_actorImage__IECZO\",\"actorName\":\"Cast_actorName__XabVA\",\"actorCharacter\":\"Cast_actorCharacter__m+TBZ\",\"loading\":\"Cast_loading__G4Jdp\"};","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styles from './Cast.module.css';\n\nfunction Cast({ movieId }) {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const API_KEY = '18ff5e266d356991087394c727a30345';\n    axios.get(`/movies/get-movie-credits/${movieId}?api_key=${API_KEY}`)\n      .then(response => {\n        setCast(response.data.cast);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Помилка отримання даних про акторський склад:', error);\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  if (loading) {\n    return <div className={styles.loading}>Завантаження акторського складу...</div>;\n  }\n\n  return (\n    <div className={styles.castContainer}>\n      <h2>Акторський склад</h2>\n      {cast.length > 0 ? (\n        <ul className={styles.castList}>\n          {cast.map(actor => (\n            <li key={actor.id} className={styles.castItem}>\n              <img\n                src={`https://image.tmdb.org/t/p/w185${actor.profile_path}`}\n                alt={actor.name}\n                className={styles.actorImage}\n              />\n              <h3>{actor.name}</h3>\n              <p>Роль: {actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>Акторський склад відсутній.</p>\n      )}\n    </div>\n  );\n}\n\nexport default Cast;\n"],"names":["_ref","movieId","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","useEffect","axios","concat","then","response","data","catch","error","console","_jsx","className","styles","children","_jsxs","length","map","actor","src","profile_path","alt","name","character","id"],"sourceRoot":""}